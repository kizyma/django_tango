git init - in root project folder
git remote add origin git@github.com:<USERNAME>/django_tango.git
git add .
git commit -m "Some message" - initial commit message

IN CASE YOU MADE AN OOPSIE

git pull origin master --allow-unrelated-histories 
git push -f origin master - yeah, I re-wrote remote, cause I am not very good with GIT
git log 

If not, proceed as ususal


Then venv and stuff. You might go the venv route, but in my case I will use Conda + PIP, since it is much, MUCH easier to maintain

conda --version - to make sure conda was installed properly
conda update conda
conda create -n rangoenv python=3.8
conda activate rangoenv
conda deactivate
pip install -r requirements.txt - all requirements will be there and will be kept only there


DJANGO Part, instead of using Django 2 like in the book, I will be using Django 3, so all commands will be changed accordingly.
django-admin startproject tango_with_django_project
python manage.py runserver

About ports and such. You may run command like this to run app on a specific port (anything < 1024 is privilledged, so just don`t.)
python manage.py runserver 0.0.0.0: 5555 (0.0.0.0 can be replaced by your machine IP or left as is, django is smart like that)

And this way, you might access your app locally from another machine (depending on proxy, network settings and such)
http://<your_machine_ip>:<port>/

python manage.py startapp rango


Another difference
{% load static %} instead of {% load staticfiles %} or any other variation of the beforementioned


To run some tests for your app
python manage.py test <app>.tests